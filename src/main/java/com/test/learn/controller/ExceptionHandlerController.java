package com.test.learn.controller;

import com.test.learn.exception.APIException;
import com.test.learn.exception.InvalidRequestException;
import com.test.learn.exception.ProcessingException;
import com.test.learn.model.response.ErrorResponse;
import com.test.learn.util.Constant;
import com.test.learn.util.enums.ErrorCode;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.converter.HttpMessageNotReadableException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

@ControllerAdvice
@Slf4j
/**
 * Default controller to handle the exceptions generated by the API
 */
public class ExceptionHandlerController extends ResponseEntityExceptionHandler {


    public ExceptionHandlerController() {
    }


    // Handling user input errors
    @ExceptionHandler(value = {InvalidRequestException.class})
    protected ResponseEntity invalidRequestExceptionHandler(Exception e, WebRequest request) {
        String errorCode = ErrorCode.getEnum(e.getMessage()).getValue();
        String errorMsg = ErrorCode.getErrorMsg(e.getMessage());
        ErrorResponse errorResponse = new ErrorResponse(errorCode, errorMsg);
        log.error("InvalidRequestException", e);
        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(errorResponse);
    }


    // Handling error while running backend code
    @ExceptionHandler(value = {ProcessingException.class, Exception.class})
    protected ResponseEntity processingExceptionHandler(Exception e, WebRequest request) {

        APIException soapAPIEx =
                (e instanceof APIException) ? (APIException) e : new ProcessingException(
                        ErrorCode.ERR_API_000);
        String errorCode = ErrorCode.getEnum(soapAPIEx.getMessage()).getValue();
        String errorMsg = ErrorCode.getErrorMsg(soapAPIEx.getMessage());
        ErrorResponse errorResponse = new ErrorResponse(errorCode, errorMsg);
        log.error("processingExceptionHandler", e);
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(errorResponse);
    }


    protected ResponseEntity messageNotReadableExceptionHandler(HttpMessageNotReadableException e, WebRequest request) {
        log.debug("", e);
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(Constant.INVALID_REQUEST_PARAM);
    }

}
